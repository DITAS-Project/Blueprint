{
	"INTERNAL_STRUCTURE": {
		"Overview": {
			"name": "DITAS Machine 3 - Soraluce FS",
			"description": "VDC blueprint for the 'DITAS Machines 3 - Soraluce FS' at Ideko",
			"tags": [{
					"method_id": "GetLocations",
					"tags": ["location", "list", "json"]
				},
				{
					"method_id": "GetMachinesByLocation",
					"tags": ["location", "machine", "list", "json"]
				},
				{
					"method_id": "GetCaptureGroupsByMachine",
					"tags": ["machine", "capture-group", "list", "json"]
				},
				{
					"method_id": "GetIndicatorsByCaptureGroup",
					"tags": ["capture-group", "indicator", "data", "json"]
				},
				{
					"method_id": "GetLocationDetails",
					"tags": ["location", "details", "json"]
				},
				{
					"method_id": "GetMachineDetails",
					"tags": ["machine", "details", "json"]
				},
				{
					"method_id": "GetCaptureGroupDetails",
					"tags": ["capture-group", "details", "json"]
				},
				{
					"method_id": "GetIndicatorDetails",
					"tags": ["indicator", "details", "json"]
				},
				{
					"method_id": "GetHistoricalData",
					"tags": ["indicator", "data", "json"]
				},
				{
					"method_id": "GetStreamingData",
					"tags": ["indicator", "stream", "data", "json"]
				}
			]
		},
		"Data_Sources": [{
				"id": "MachineTimeseriesDatabase",
				"description": "Machine timeseries database (InfluxDB) located in the smart box of the machine",
				"class": "time-series database",
				"type": "influxdb",
				"parameters": {
					"ip": "172.16.33.202",
					"port": "****",
					"user": "****",
					"password": "****",
					"database": "****"
				},
				"schema": {
					"TO-DO": "[Borja - To define the schema of the database. Check Javi Escaqrtin's CSV data examples to devise the future influxDB structure]"
				}
			},
			{
				"id": "InboxStreamingAPI",
				"description": "In-box streaming API served directly from the interoperability module on the smart box",
				"class": "data stream",
				"type": "REST API",
				"parameters": {
					"url": "https://172.16.33.202",
					"port": "****"
				}
			},
			{
				"id": "SavvyCloudAPI",
				"description": "Savvy cloud API with both the streaming and REST endpoints",
				"class": "api",
				"type": "rest",
				"parameters": {
					"readme": "The following key / secret are the credentials used in the Node-RED flow.",
					"apy-key": "****",
					"apy-secret": "****"
				}
			}
		],
		"Flow": {
			"platform": "Node-RED",
			"parameters": {},
			"source_code": [{
				"id": "5a7a8d69.4d8984",
				"type": "tab",
				"label": "GetLocations",
				"disabled": false,
				"info": "Returns the locations available for the segment."
			}, {
				"id": "7afcc43b.8ba3ac",
				"type": "tab",
				"label": "GetMachinesByLocation",
				"disabled": false,
				"info": "Given a locationId, returns the list of machines in that location."
			}, {
				"id": "77366397.0a2c5c",
				"type": "tab",
				"label": "GetCaptureGroupsByMachine",
				"disabled": false,
				"info": "Given a locationId and a machineId, returns the list of capture groups."
			}, {
				"id": "972181d2.c1b9c",
				"type": "tab",
				"label": "GetIndicatorsByCaptureGroup",
				"disabled": false,
				"info": "Given a locationId and a machineId, returns the list of capture groups."
			}, {
				"id": "90fcc2d7.38397",
				"type": "tab",
				"label": "GetLocationDetails",
				"disabled": false,
				"info": "Given a locationId, returns the details of the location. The details include the following fields: locationId, enterpriseName, locationName, geolocation, timezone."
			}, {
				"id": "252322fa.0968ae",
				"type": "tab",
				"label": "GetMachineDetails",
				"disabled": false,
				"info": "Given a locationId and a machineId, returns the details of the machine. The details include the following fields: machineId, machineName, machineLastDate, machineActive."
			}, {
				"id": "1ac782cd.23dd5d",
				"type": "tab",
				"label": "GetCaptureGroupDetails",
				"disabled": false,
				"info": "Given a locationId, a machineId and a captureGroupId, returns the details of the capture group. The details include the following fields: groupId, groupName, groupDescription, groupFrequency, dataSize, active, groupLastDate."
			}, {
				"id": "88a82d14.96ce1",
				"type": "tab",
				"label": "GetIndicatorDetails",
				"disabled": false,
				"info": "Given a locationId, a machineId, a captureGroupId and a indicatorId, returns the details of the indicator. The details include the following fields: indicatorId, indicatorName, indicatorDescription, indicatorOrigin, minValue, maxValue, optValue, defaultAggregateFunction, active."
			}, {
				"id": "92549871.7749d8",
				"type": "tab",
				"label": "GetHistoricalData",
				"disabled": false,
				"info": "Returns the corresponding data values for to the given parameters."
			}, {
				"id": "acf59602.264d18",
				"type": "tab",
				"label": "GetStreamingData",
				"disabled": false,
				"info": "Returns the streaming data for the parameters given."
			}, {
				"id": "bf7664dd.0fec48",
				"type": "tab",
				"label": "CAF",
				"disabled": false,
				"info": "Entry point for the CAF"
			}, {
				"id": "9100089c.cce5e8",
				"type": "savvy",
				"z": "5a7a8d69.4d8984",
				"name": "/GetLocations",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"target": "list-locations",
				"x": 660,
				"y": 120,
				"wires": [
					["7dfeecf9.8feaa4"]
				]
			}, {
				"id": "7dfeecf9.8feaa4",
				"type": "http response",
				"z": "5a7a8d69.4d8984",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 910,
				"y": 180,
				"wires": []
			}, {
				"id": "9290fca.6d4e4",
				"type": "savvy",
				"z": "7afcc43b.8ba3ac",
				"name": "GetMachinesByLocation",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "",
				"key": "****",
				"secret": "****",
				"target": "list-machines",
				"x": 570,
				"y": 240,
				"wires": [
					["f0fa761d.bf10b8"]
				]
			}, {
				"id": "d54ba1ab.b83d1",
				"type": "function",
				"z": "7afcc43b.8ba3ac",
				"name": "Add locationId to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 440,
				"y": 140,
				"wires": [
					["9290fca.6d4e4"]
				]
			}, {
				"id": "f0fa761d.bf10b8",
				"type": "http response",
				"z": "7afcc43b.8ba3ac",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 830,
				"y": 260,
				"wires": []
			}, {
				"id": "3283901e.a680a",
				"type": "savvy",
				"z": "77366397.0a2c5c",
				"name": "GetCaptureGroupsByMachine",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "",
				"key": "****",
				"secret": "****",
				"target": "list-capture-groups",
				"x": 570,
				"y": 240,
				"wires": [
					["7cca582c.0e4f68"]
				]
			}, {
				"id": "441fa27f.12321c",
				"type": "function",
				"z": "77366397.0a2c5c",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    msg.machineId = msg.req.query.machine;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 370,
				"y": 140,
				"wires": [
					["3283901e.a680a"]
				]
			}, {
				"id": "7cca582c.0e4f68",
				"type": "http response",
				"z": "77366397.0a2c5c",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 810,
				"y": 240,
				"wires": []
			}, {
				"id": "338eb167.3e88ae",
				"type": "savvy",
				"z": "972181d2.c1b9c",
				"name": "GetIndicatorsByCaptureGroup",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "",
				"key": "****",
				"secret": "****",
				"target": "list-indicators",
				"x": 570,
				"y": 260,
				"wires": [
					["12068301.34a89d"]
				]
			}, {
				"id": "c70a465a.0ce1b8",
				"type": "function",
				"z": "972181d2.c1b9c",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    msg.machineId = msg.req.query.machine;\n    msg.groupId = msg.req.query.group;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 430,
				"y": 160,
				"wires": [
					["338eb167.3e88ae"]
				]
			}, {
				"id": "12068301.34a89d",
				"type": "http response",
				"z": "972181d2.c1b9c",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 810,
				"y": 280,
				"wires": []
			}, {
				"id": "220ffa0c.6f8376",
				"type": "savvy",
				"z": "90fcc2d7.38397",
				"name": "GetLocationDetails",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"locationId": "",
				"groupId": "",
				"machineId": "",
				"indicatorId": "",
				"target": "details-location",
				"x": 510,
				"y": 200,
				"wires": [
					["84dde7c3.a91a48"]
				]
			}, {
				"id": "84dde7c3.a91a48",
				"type": "http response",
				"z": "90fcc2d7.38397",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 790,
				"y": 200,
				"wires": []
			}, {
				"id": "a2721ef2.59ba2",
				"type": "function",
				"z": "90fcc2d7.38397",
				"name": "Add locationId to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 360,
				"y": 100,
				"wires": [
					["220ffa0c.6f8376"]
				]
			}, {
				"id": "70a50309.a5f03c",
				"type": "savvy",
				"z": "252322fa.0968ae",
				"name": "GetMachineDetails",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"locationId": "",
				"groupId": "",
				"machineId": "",
				"indicatorId": "",
				"fromTs": "",
				"toTs": "",
				"target": "details-machine",
				"x": 490,
				"y": 220,
				"wires": [
					["f32bcabe.0ae6b8"]
				]
			}, {
				"id": "f32bcabe.0ae6b8",
				"type": "http response",
				"z": "252322fa.0968ae",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 770,
				"y": 220,
				"wires": []
			}, {
				"id": "f79bc9f.ad61138",
				"type": "function",
				"z": "252322fa.0968ae",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    msg.machineId = msg.req.query.machine;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 350,
				"y": 120,
				"wires": [
					["70a50309.a5f03c"]
				]
			}, {
				"id": "70699836.f17f28",
				"type": "savvy",
				"z": "1ac782cd.23dd5d",
				"name": "GetCaptureGroupDetails",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"target": "details-capture-group",
				"x": 610,
				"y": 200,
				"wires": [
					["36e869f0.3859a6"]
				]
			}, {
				"id": "36e869f0.3859a6",
				"type": "http response",
				"z": "1ac782cd.23dd5d",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 870,
				"y": 200,
				"wires": []
			}, {
				"id": "622a76ca.4d1b18",
				"type": "function",
				"z": "1ac782cd.23dd5d",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    msg.machineId = msg.req.query.machine;\n    msg.groupId = msg.req.query.group;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 450,
				"y": 100,
				"wires": [
					["70699836.f17f28"]
				]
			}, {
				"id": "a5503cec.c444b",
				"type": "savvy",
				"z": "88a82d14.96ce1",
				"name": "GetIndicatorDetails",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"locationId": "E3L3",
				"groupId": "JPZE8P",
				"machineId": "ZDB_KUCE58_2",
				"indicatorId": "SYEGSM",
				"target": "details-indicator",
				"x": 590,
				"y": 220,
				"wires": [
					["42e89115.f96b2"]
				]
			}, {
				"id": "42e89115.f96b2",
				"type": "http response",
				"z": "88a82d14.96ce1",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 870,
				"y": 220,
				"wires": []
			}, {
				"id": "96ecd00c.e4e5f",
				"type": "function",
				"z": "88a82d14.96ce1",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is closing the connection, do nothing\n// Don't need to stop the request, it is very light, so we let it \n// finish despite potentially nobody will be waiting for the response\nif (msg.connectionClosed !== true)\n{\n    msg.locationId = msg.req.query.location;\n    msg.machineId = msg.req.query.machine;\n    msg.groupId = msg.req.query.group;\n    msg.indicatorId = msg.req.query.indicator;\n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 450,
				"y": 120,
				"wires": [
					["a5503cec.c444b"]
				]
			}, {
				"id": "d9278a08.745788",
				"type": "savvy",
				"z": "92549871.7749d8",
				"name": "GetIndicatorDetails",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"target": "data",
				"x": 770,
				"y": 300,
				"wires": [
					["634b5a7f.61fa34"]
				]
			}, {
				"id": "634b5a7f.61fa34",
				"type": "http response",
				"z": "92549871.7749d8",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 990,
				"y": 320,
				"wires": []
			}, {
				"id": "bb795321.eeab8",
				"type": "function",
				"z": "92549871.7749d8",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is clossing the connection, ndo nothing\nif (msg.connectionClosed !== true)\n{\n    // We force the parameters into the query as there \n    //is no way to use named AND OPTIONAL parameters\n    var queryParams = msg.req.query;\n    \n    // Mandatory\n    msg.locationId = queryParams.location;\n    msg.machineId = queryParams.machine;\n    \n    // Mandatory timestamps\n    msg.fromTs = queryParams.from;\n    msg.toTs = queryParams.to;\n    \n    // Optional\n    msg.groupId = undefined;\n    msg.indicatorId = undefined;\n    if (queryParams.group !== undefined)\n        msg.groupId = queryParams.group\n    if (queryParams.indicator !== undefined)\n        msg.indicatorId = queryParams.indicator\n    \n    return msg;\n}",
				"outputs": 1,
				"noerr": 0,
				"x": 510,
				"y": 200,
				"wires": [
					["d9278a08.745788"]
				]
			}, {
				"id": "90399ffc.215b4",
				"type": "savvy",
				"z": "acf59602.264d18",
				"name": "GetStreamingData",
				"cncmanufacturer": "",
				"endpoint": "api-ideko.savvyds.com",
				"returntype": "utf-8",
				"apitype": "cloud",
				"port": "8017",
				"key": "****",
				"secret": "****",
				"locationId": "",
				"groupId": "",
				"machineId": "",
				"indicatorId": "",
				"fromTs": "",
				"toTs": "",
				"target": "stream",
				"x": 730,
				"y": 180,
				"wires": [
					["3fb02483.73346c"]
				]
			}, {
				"id": "3fb02483.73346c",
				"type": "http response",
				"z": "acf59602.264d18",
				"name": "http",
				"statusCode": "",
				"streamResponse": "1",
				"headers": {
					"Transfer-Encoding": "chunked",
					"Content-type": "text/json; charset=UTF-8"
				},
				"x": 950,
				"y": 180,
				"wires": []
			}, {
				"id": "7dcef958.7befd8",
				"type": "function",
				"z": "acf59602.264d18",
				"name": "Add config params to msg",
				"func": "// First of all, if the node is clossing the connection, ndo nothing\nif (msg.connectionClosed !== true)\n{\n    // We force the parameters into the query as there \n    //is no way to use named AND OPTIONAL parameters\n    var queryParams = msg.req.query;\n    \n    // Mandatory - can be comma separated list of machines\n    msg.machineId = queryParams.machines;\n    \n    return msg;\n}\n\n",
				"outputs": 1,
				"noerr": 0,
				"x": 430,
				"y": 100,
				"wires": [
					["90399ffc.215b4"]
				]
			}, {
				"id": "bbb156bf.cae418",
				"type": "function",
				"z": "acf59602.264d18",
				"name": "Stream stopper",
				"func": "// Sens s STOP signal to the Savy node if the \n// HTTP In node indicates that the connection\n// was closed\nif (msg.connectionClosed === true)\n{\n    msg.stopRequest = true;\n    return msg;\n}\n// Creo que si la propiedad connectionClosed no es \n// True no se manda nada por lo que el flujo no llega \n// al siguiente mensage",
				"outputs": 1,
				"noerr": 0,
				"x": 420,
				"y": 240,
				"wires": [
					["90399ffc.215b4"]
				]
			}, {
				"id": "48c6bb17.28ef04",
				"type": "function",
				"z": "92549871.7749d8",
				"name": "Stream stopper",
				"func": "// Sens s STOP signal to the Savy node if the \n// HTTP In node indicates that the connection\n// was closed\nif (msg.connectionClosed === true)\n{\n    msg.stopRequest = true;\n    return msg;\n}\n// Creo que si la propiedad connectionClosed no es \n// True no se manda nada por lo que el flujo no llega \n// al siguiente mensage",
				"outputs": 1,
				"noerr": 0,
				"x": 500,
				"y": 360,
				"wires": [
					["d9278a08.745788"]
				]
			}, {
				"id": "6c391f38.b49a",
				"type": "http in",
				"z": "bf7664dd.0fec48",
				"name": "CAF",
				"url": "/caf/:exposed_method",
				"method": "get",
				"upload": false,
				"swaggerDoc": "",
				"x": 170,
				"y": 260,
				"wires": [
					["a34c3ab7.2b2648"]
				]
			}, {
				"id": "12a1bd29.20f323",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetLocations",
				"links": ["ee629f71.836eb"],
				"x": 715,
				"y": 60,
				"wires": []
			}, {
				"id": "c6354a5f.9a27b8",
				"type": "link in",
				"z": "acf59602.264d18",
				"name": "GetStreamingData",
				"links": ["483696d9.5a2a18"],
				"x": 195,
				"y": 180,
				"wires": [
					["7dcef958.7befd8", "bbb156bf.cae418"]
				]
			}, {
				"id": "a34c3ab7.2b2648",
				"type": "switch",
				"z": "bf7664dd.0fec48",
				"name": "method",
				"property": "req.params.exposed_method",
				"propertyType": "msg",
				"rules": [{
					"t": "eq",
					"v": "GetLocations",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetMachinesByLocation",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetCaptureGroupsByMachine",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetIndicatorsByCaptureGroup",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetLocationDetails",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetMachineDetails",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetCaptureGroupDetails",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetIndicatorDetails",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetHistoricalData",
					"vt": "str"
				}, {
					"t": "eq",
					"v": "GetStreamingData",
					"vt": "str"
				}, {
					"t": "else"
				}],
				"checkall": "true",
				"repair": false,
				"outputs": 11,
				"x": 400,
				"y": 260,
				"wires": [
					["12a1bd29.20f323"],
					["ce647f8c.02a18"],
					["1a4b4b38.c420b5"],
					["acb49cc6.6e4ff"],
					["4e889f7d.eefe2"],
					["2c221f18.f53c2"],
					["303fefa2.4a00e"],
					["b95b5093.2b93b"],
					["78601f23.39967"],
					["483696d9.5a2a18"],
					["bfc0d085.f305"]
				]
			}, {
				"id": "ce647f8c.02a18",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetMachinesByLocation",
				"links": ["f7b737be.b98fe8"],
				"x": 715,
				"y": 100,
				"wires": []
			}, {
				"id": "1a4b4b38.c420b5",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetCaptureGroupsByMachine",
				"links": ["3074c35.fe8943c"],
				"x": 715,
				"y": 140,
				"wires": []
			}, {
				"id": "acb49cc6.6e4ff",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetIndicatorsByCaptureGroup",
				"links": ["3c2cdac7.c35dc6"],
				"x": 715,
				"y": 180,
				"wires": []
			}, {
				"id": "4e889f7d.eefe2",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetLocationDetails",
				"links": ["5f1a803a.1e991"],
				"x": 715,
				"y": 220,
				"wires": []
			}, {
				"id": "2c221f18.f53c2",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetMachineDetails",
				"links": ["3322b1ee.6534de"],
				"x": 715,
				"y": 260,
				"wires": []
			}, {
				"id": "303fefa2.4a00e",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetCaptureGroupDetails",
				"links": ["314b3158.87634e"],
				"x": 715,
				"y": 300,
				"wires": []
			}, {
				"id": "b95b5093.2b93b",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetIndicatorDetails",
				"links": ["3a1e1ecf.66a232"],
				"x": 715,
				"y": 340,
				"wires": []
			}, {
				"id": "78601f23.39967",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetHistoricalData",
				"links": ["f09145e4.b52c08"],
				"x": 715,
				"y": 380,
				"wires": []
			}, {
				"id": "483696d9.5a2a18",
				"type": "link out",
				"z": "bf7664dd.0fec48",
				"name": "GetStreamingData",
				"links": ["c6354a5f.9a27b8"],
				"x": 715,
				"y": 420,
				"wires": []
			}, {
				"id": "bfc0d085.f305",
				"type": "function",
				"z": "bf7664dd.0fec48",
				"name": "method not exists",
				"func": "msg.payload = \"The exposed doesn't exist: \" + msg.req.params.exposed_method;\nreturn msg;",
				"outputs": 1,
				"noerr": 0,
				"x": 630,
				"y": 500,
				"wires": [
					["f5884c46.ee402"]
				]
			}, {
				"id": "f5884c46.ee402",
				"type": "http response",
				"z": "bf7664dd.0fec48",
				"name": "",
				"statusCode": "",
				"streamResponse": "0",
				"headers": {},
				"x": 830,
				"y": 500,
				"wires": []
			}, {
				"id": "f09145e4.b52c08",
				"type": "link in",
				"z": "92549871.7749d8",
				"name": "GetHistoricalData",
				"links": ["78601f23.39967"],
				"x": 275,
				"y": 280,
				"wires": [
					["bb795321.eeab8", "48c6bb17.28ef04"]
				]
			}, {
				"id": "3a1e1ecf.66a232",
				"type": "link in",
				"z": "88a82d14.96ce1",
				"name": "GetIndicatorDetails",
				"links": ["b95b5093.2b93b"],
				"x": 235,
				"y": 120,
				"wires": [
					["96ecd00c.e4e5f"]
				]
			}, {
				"id": "314b3158.87634e",
				"type": "link in",
				"z": "1ac782cd.23dd5d",
				"name": "GetCaptureGroupDetails",
				"links": ["303fefa2.4a00e"],
				"x": 255,
				"y": 100,
				"wires": [
					["622a76ca.4d1b18"]
				]
			}, {
				"id": "3322b1ee.6534de",
				"type": "link in",
				"z": "252322fa.0968ae",
				"name": "GetMachineDetails",
				"links": ["2c221f18.f53c2"],
				"x": 175,
				"y": 120,
				"wires": [
					["f79bc9f.ad61138"]
				]
			}, {
				"id": "5f1a803a.1e991",
				"type": "link in",
				"z": "90fcc2d7.38397",
				"name": "GetLocationDetails",
				"links": ["4e889f7d.eefe2"],
				"x": 175,
				"y": 100,
				"wires": [
					["a2721ef2.59ba2"]
				]
			}, {
				"id": "3c2cdac7.c35dc6",
				"type": "link in",
				"z": "972181d2.c1b9c",
				"name": "GetIndicatorsByCaptureGroup",
				"links": ["acb49cc6.6e4ff"],
				"x": 235,
				"y": 160,
				"wires": [
					["c70a465a.0ce1b8"]
				]
			}, {
				"id": "3074c35.fe8943c",
				"type": "link in",
				"z": "77366397.0a2c5c",
				"name": "GetCaptureGroupsByMachine",
				"links": ["1a4b4b38.c420b5"],
				"x": 175,
				"y": 140,
				"wires": [
					["441fa27f.12321c"]
				]
			}, {
				"id": "f7b737be.b98fe8",
				"type": "link in",
				"z": "7afcc43b.8ba3ac",
				"name": "GetMachinesByLocation",
				"links": ["ce647f8c.02a18"],
				"x": 235,
				"y": 140,
				"wires": [
					["d54ba1ab.b83d1"]
				]
			}, {
				"id": "ee629f71.836eb",
				"type": "link in",
				"z": "5a7a8d69.4d8984",
				"name": "GetLocations",
				"links": ["12a1bd29.20f323"],
				"x": 455,
				"y": 120,
				"wires": [
					["9100089c.cce5e8"]
				]
			}]

		},
		"Testing_Output_Data": [{
				"method_id": "GetLocations",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetMachinesByLocation",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetCaptureGroupsByMachine",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetIndicatorsByCaptureGroup",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetLocationDetails",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetMachineDetails",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetCaptureGroupDetails",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetIndicatorDetails",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetHistoricalData",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetStreamingData",
				"zip_data": "TO-DO URL to a zip file with data samples"
			}
		]
	},
	"DATA_MANAGEMENT": {},
	"ABSTRACT_PROPERTIES": {},
	"COOKBOOK_APPENDIX": {},
	"EXPOSED_API": {
		"openapi": "3.0.0",
		"info": {
			"title": "IDEKO VDC",
			"description": "VDC methods for the IDEKO use case",
			"version": "0.0.1"
		},
		"paths": {
			"/GetLocations": {
				"get": {
					"summary": "Returns the locations available for the segment.",
					"operationId": "GetLocations",
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetLocationsResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetMachinesByLocation": {
				"get": {
					"summary": "Given a location id, returns the list of machines in that location.",
					"operationId": "GetMachinesByLocation",
					"parameters": [{
						"in": "query",
						"name": "location",
						"description": "ID of the location",
						"required": true,
						"schema": {
							"type": "string"
						}
					}],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetMachinesByLocationResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetCaptureGroupsByMachine": {
				"get": {
					"summary": "Given a location id and a machine id, returns the list of capture groups.",
					"operationId": "GetCaptureGroupsByMachine",
					"parameters": [{
							"in": "query",
							"name": "location",
							"description": "ID of the location",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "machine",
							"description": "ID of the machine",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetCaptureGroupsByMachineResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetIndicatorsByCaptureGroup": {
				"get": {
					"summary": "Given a location id and a machine id, returns the list of capture groups.",
					"operationId": "GetIndicatorsByCaptureGroup",
					"parameters": [{
							"in": "query",
							"name": "location",
							"description": "ID of the location",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "machine",
							"description": "ID of the machine",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "group",
							"description": "ID of the capture group",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetIndicatorsByCaptureGroupResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetLocationDetails": {
				"get": {
					"summary": "Given a location id, returns the details of the location. The details include the following fields; locationId, enterpriseName, locationName, geolocation, timezone.",
					"operationId": "GetLocationDetails",
					"parameters": [{
						"in": "query",
						"name": "location",
						"description": "ID of the location",
						"required": true,
						"schema": {
							"type": "string"
						}
					}],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetLocationDetailsResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetMachineDetails": {
				"get": {
					"summary": "Given a location id and a machine id, returns the details of the machine. The details include the following fields; machineId, machineName, machineLastDate, machineActive.",
					"operationId": "GetMachineDetails",
					"parameters": [{
							"in": "query",
							"name": "location",
							"description": "ID of the location",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "machine",
							"description": "ID of the machine",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetMachineDetailsResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetCaptureGroupDetails": {
				"get": {
					"summary": "Given a location id, a machine id and a captureGroup id, returns the details of the capture group. The details include the following fields; groupId, groupName, groupDescription, groupFrequency, dataSize, active, groupLastDate.",
					"operationId": "GetCaptureGroupDetails",
					"parameters": [{
							"in": "query",
							"name": "location",
							"description": "ID of the location",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "machine",
							"description": "ID of the machine",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "group",
							"description": "ID of the capture group",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetCaptureGroupDetailsResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetIndicatorDetails": {
				"get": {
					"summary": "Given a location id, a machine id, a captureGroup id and a indicator id, returns the details of the indicator. The details include the following fields; indicatorId, indicatorName, indicatorDescription, indicatorOrigin, minValue, maxValue, optValue, defaultAggregateFunction, active.",
					"operationId": "GetIndicatorDetails",
					"parameters": [{
							"in": "query",
							"name": "location",
							"description": "ID of the location",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "machine",
							"description": "ID of the machine",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "group",
							"description": "ID of the capture group",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "indicator",
							"description": "ID of the indicator",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetIndicatorDetailsResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetHistoricalData": {
				"get": {
					"summary": "Returns the corresponding data values for to the given parameters.",
					"operationId": "GetHistoricalData",
					"parameters": [{
							"in": "query",
							"name": "location",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "machine",
							"required": true,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "group",
							"required": false,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "indicator",
							"required": false,
							"schema": {
								"type": "string"
							}
						},
						{
							"in": "query",
							"name": "from",
							"required": true,
							"schema": {
								"type": "number"
							}
						},
						{
							"in": "query",
							"name": "to",
							"required": true,
							"schema": {
								"type": "number"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetHistoricalDataResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			},
			"/GetStreamingData": {
				"get": {
					"summary": "Returns the streaming data for the parameters given.",
					"operationId": "GetStreamingData",
					"parameters": [{
						"in": "query",
						"name": "machines",
						"required": true,
						"schema": {
							"type": "string"
						}
					}],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetStreamingDataResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": ["SavvyCloudAPI"]
				}
			}
		},
		"components": {
			"schemas": {
				"ErrorResponse": {
					"type": "object",
					"properties": {
						"status": {
							"type": "integer"
						},
						"code": {
							"type": "integer"
						},
						"message": {
							"type": "string"
						},
						"link": {
							"type": "string"
						},
						"developerMessage": {
							"type": "string"
						}
					}
				},
				"GetLocationsResponse": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"locationName": {
								"type": "string"
							},
							"enterpriseName": {
								"type": "string"
							},
							"locationId": {
								"type": "string"
							}
						}
					}
				},
				"GetMachinesByLocationResponse": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"machineId": {
								"type": "string"
							},
							"machineName": {
								"type": "string"
							},
							"machineLastDate": {
								"type": "number"
							}
						}
					}
				},
				"GetCaptureGroupsByMachineResponse": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"groupName": {
								"type": "string"
							},
							"groupFrequency": {
								"type": "string"
							},
							"groupId": {
								"type": "string"
							},
							"groupDescription": {
								"type": "string"
							}
						}
					}
				},
				"GetIndicatorsByCaptureGroupResponse": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"indicatorDescription": {
								"type": "string"
							},
							"indicatorName": {
								"type": "string"
							},
							"indicatorId": {
								"type": "string"
							}
						}
					}
				},
				"GetLocationDetailsResponse": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"enterpriseName": {
							"type": "string"
						},
						"locationName": {
							"type": "string"
						},
						"geolocation": {
							"type": "string"
						},
						"timezone": {
							"type": "string"
						}
					}
				},
				"GetMachineDetailsResponse": {
					"type": "object",
					"properties": {
						"machineId": {
							"type": "string"
						},
						"machineName": {
							"type": "string"
						},
						"machineLastDate": {
							"type": "number"
						},
						"machineActive": {
							"type": "boolean"
						}
					}
				},
				"GetCaptureGroupDetailsResponse": {
					"type": "object",
					"properties": {
						"groupId": {
							"type": "string"
						},
						"groupName": {
							"type": "string"
						},
						"groupDescription": {
							"type": "string"
						},
						"groupFrequency": {
							"type": "string"
						},
						"dataSize": {
							"type": "string"
						},
						"active": {
							"type": "boolean"
						},
						"groupLastDate": {
							"type": "string",
							"format": "date-time"
						}
					}
				},
				"GetIndicatorDetailsResponse": {
					"type": "object",
					"properties": {
						"indicatorId": {
							"type": "string"
						},
						"indicatorName": {
							"type": "string"
						},
						"indicatorDescription": {
							"type": "string"
						},
						"indicatorOrigin": {
							"type": "string"
						},
						"minValue": {
							"type": "number"
						},
						"maxValue": {
							"type": "number"
						},
						"optValue": {
							"type": "number"
						},
						"defaultAggregateFunction": {
							"type": "string"
						},
						"active": {
							"type": "boolean"
						}
					}
				},
				"GetHistoricalDataResponse": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"GetStreamingDataResponse": {
					"type": "object",
					"properties": {
						"machine": {
							"type": "string"
						},
						"group": {
							"type": "string"
						},
						"data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"additionalProperties": {
										"type": "integer"
									},
									"timestamp": {
										"type": "object"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
